name: release.yml
on:
  workflow_call:
    inputs:
      name:
        description: 'docker image name'
        required: false
        type: string
      harborProject:
        required: true
        type: string
      manifestFile:
        required: true
        type: string
      repository:
        required: true
        type: string
    secrets:
      harborPass:
        required: true
      gitToken:
        required: true


jobs:
  release:
    runs-on: ubuntu-latest
    env:
      harborUser: robot$kigawa-net
      dir: "./"
      dockerFile: "./Dockerfile"
      name: ${{ inputs.name || 'keruta-executor' }}
      dockerRepository: harbor.kigawa.net/${{ inputs.harborProject }}
    steps:
      # checkout
      - uses: actions/checkout@v4

      # docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: harbor.kigawa.net
          username: ${{ env.harborUser }}
          password: ${{ secrets.harborPass }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.dockerRepository }}/${{ env.name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=raw,value=${{ github.ref_name }}-${{ github.sha }}

      - uses: docker/build-push-action@v5
        with:
          context: ${{ env.dir }}
          file: ${{ env.dockerFile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # argo
      - name: checkout manifest repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: main
          token: ${{ secrets.gitToken }}

      - name: Update YAML File
        run: |
          yq -i '.spec.template.spec.containers[0].image = "harbor.kigawa.net/library/${{ env.name }}:${{ github.ref_name }}-${{ github.sha }}"' \
          ${{ inputs.manifestFile }}

      - name: push
        run: |
          git config user.name githubActions
          git config user.email bot@kigawa.net
          git add .
          git commit --author=. -m "update rev"
          git push

